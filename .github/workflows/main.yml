name: Build, Tag, Push, and SES Email

on:
  push:
    branches:
      - main
      - '**'
permissions:
  id-token: write # Required to fetch the OIDC token for AWS authentication
  contents: read  # Required for 'actions/checkout' to read your repository code

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.get_sha.outputs.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::760715349705:role/pythoncicd
          aws-region: eu-north-1

      # Create Dockerfile inside the workflow
      - name: Create Dockerfile
        run: |
          cat <<'EOF' > Dockerfile
          FROM node:20-alpine
          WORKDIR /app
          COPY package*.json ./
          RUN npm install --production
          COPY . .
          EXPOSE 3000
          CMD ["node", "index.js"]
          EOF

      - name: Get commit SHA
        id: get_sha
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:${{ steps.get_sha.outputs.sha }} .

  push:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.build.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Create Dockerfile again for push job
      - name: Create Dockerfile
        run: |
          cat <<'EOF' > Dockerfile
          FROM node:20-alpine
          WORKDIR /app
          COPY package*.json ./
          RUN npm install --production
          COPY . .
          EXPOSE 3000
          CMD ["node", "index.js"]
          EOF

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest -t ${{ secrets.DOCKERHUB_USERNAME }}/myapp:${{ needs.build.outputs.sha }} .

      - name: Push Docker image (latest & SHA)
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/myapp:${{ needs.build.outputs.sha }}

  ses_integration:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Send Email Notification (on success)
        if: success()
        run: |
          aws ses send-email \
            --from 'hannapaikkatt1234@gmail.com' \
            --destination 'ToAddresses="hannap607@gmail.com"' \
            --message 'Subject={Data="✅ Build Success - ${{ github.repository }}"},Body={Text={Data="Build for ${{ github.repository }} on branch `${{ github.ref_name}}` was successful!\n\nCommit: `${{ github.sha}}`\nWorkflow Run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}}' \
            --region eu-north-1
      - name: Send Email Notification (on failure)
        if: failure()
        run: |
          aws ses send-email \
            --from 'hannapaikkatt1234@gmail.com' \
            --destination 'ToAddresses="hannap607@gmail.com"' \
            --message 'Subject={Data="❌ Build FAILED - ${{ github.repository }}"},Body={Text={Data="*ALERT:* Build for ${{ github.repository }} on branch `${{ github.ref_name}}` *FAILED!*\n\nCommit: `${{ github.sha}}`\n*Please review logs:* ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"}}' \
            --region eu-north-1
